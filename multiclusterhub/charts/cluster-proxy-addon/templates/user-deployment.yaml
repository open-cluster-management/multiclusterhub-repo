apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "cluster-proxy-addon.fullname" . }}-user
  labels:
    app: {{ template "cluster-proxy-addon.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/name: {{ template "cluster-proxy-addon.name" . }}
    chart: {{ template "cluster-proxy-addon.chart" . }}
    component: cluster-proxy-addon-user
    helm.sh/chart: {{ template "cluster-proxy-addon.chart" . }}
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
spec:
  # fixed replicas to 1, the kubectl-ui does not support multiple replicas
  replicas: 1
  selector:
    matchLabels:
      app: {{ template "cluster-proxy-addon.name" . }}
      release: {{ .Release.Name }}
      component: cluster-proxy-addon-user
  template:
    metadata:
      labels:
        app: {{ template "cluster-proxy-addon.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
        app.kubernetes.io/name: {{ template "cluster-proxy-addon.name" . }}
        chart: {{ template "cluster-proxy-addon.chart" . }}
        component: cluster-proxy-addon-user
        helm.sh/chart: {{ template "cluster-proxy-addon.chart" . }}
        heritage: {{ .Release.Service }}
        ocm-antiaffinity-selector: cluster-proxy-addon-user
        release: {{ .Release.Name }}
    spec:
      serviceAccountName: cluster-proxy
      hostNetwork: false
      hostPID: false
      hostIPC: false
      securityContext:
        runAsNonRoot: true
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                {{- range .Values.arch }}
                - {{ . }}
                {{- end }}
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 70
            podAffinityTerm:
              topologyKey: topology.kubernetes.io/zone
              labelSelector:
                matchExpressions:
                - key: ocm-antiaffinity-selector
                  operator: In
                  values:
                  - cluster-proxy-addon-user
          - weight: 35
            podAffinityTerm:
              topologyKey: kubernetes.io/hostname
              labelSelector:
                matchExpressions:
                - key: ocm-antiaffinity-selector
                  operator: In
                  values:
                  - cluster-proxy-addon-user
      tolerations:
        - key: dedicated
          operator: Exists
          effect: NoSchedule
        - effect: NoSchedule 
          key: node-role.kubernetes.io/infra 
          operator: Exists
      containers:
      - name: kubectl-ui
        image: {{ .Values.global.imageOverrides.cluster_proxy_addon }}
        imagePullPolicy: {{ .Values.global.pullPolicy }}
        command:
          - "/cluster-proxy"
        args:
          - "user-server"
          - "--host={{ template "cluster-proxy-addon.proxy-entrypoint-namespace" . }}"
          - "--port=8090"
          - "--proxy-ca-cert=/proxy-ca/ca.crt"
          - "--proxy-cert=/proxy-client-tls/tls.crt"
          - "--proxy-key=/proxy-client-tls/tls.key"
          - "--server-port=9092"
          - "--server-key=/user-tls/tls.key"
          - "--server-cert=/user-tls/tls.crt"
        env:
        {{- if .Values.hubconfig.proxyConfigs }}
          - name: HTTP_PROXY
            value: {{ .Values.hubconfig.proxyConfigs.HTTP_PROXY }}
          - name: HTTPS_PROXY
            value: {{ .Values.hubconfig.proxyConfigs.HTTPS_PROXY }}
          - name: NO_PROXY
            value: {{ .Values.hubconfig.proxyConfigs.NO_PROXY }}
        {{- end }}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          privileged: false
        livenessProbe:
          httpGet:
            path: /healthz
            scheme: HTTP
            port: 8000
          initialDelaySeconds: 2
          periodSeconds: 10
        volumeMounts:
          - name: user-tls-vol
            mountPath: /user-tls
            readOnly: true
          - name: proxy-server-ca
            mountPath: /proxy-ca
            readOnly: true
          - name: proxy-client-cert
            mountPath: /proxy-client-tls
            readOnly: true
        ports:
          - name: userport
            containerPort: 9092
      volumes:
        - name: user-tls-vol
          secret:
            secretName: cluster-proxy-user-serving-cert
        - name: proxy-server-ca
          secret:
            secretName: proxy-server-ca
        - name: proxy-client-cert
          secret:
            secretName: proxy-client
      {{- if .Values.pullSecret }}
      imagePullSecrets:
      - name: {{ .Values.pullSecret }}
      {{- end }}
      {{- with .Values.hubconfig.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
      {{- end }}
